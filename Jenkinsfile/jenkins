pipeline {
    agent any

    tools {
        nodejs '22.14.0'  
    }

    environment {
        IMAGE_VERSION = "${env.BUILD_NUMBER}"  // Auto-incrementing build number
        BACKEND_IMAGE = "munfung/backend-api"
        FRONTEND_IMAGE = "munfung/frontend-app"
    }

    stages {

        stage('Clone GitHub Project') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/MF-Vv/PRE-TASK']])
            }
        }

        stage('Build Docker Image - Backend') {
            steps {
                sh "ls -l"
                sh "docker build -t ${BACKEND_IMAGE}:${IMAGE_VERSION} ./backend-app"
                sh "docker tag ${BACKEND_IMAGE}:${IMAGE_VERSION} ${BACKEND_IMAGE}:latest"
            }
        }

        stage('Build Docker Image - Frontend') {
            steps {
                sh "ls -l"
                sh "docker build -t ${FRONTEND_IMAGE}:${IMAGE_VERSION} ./frontend-app"
                sh "docker tag ${FRONTEND_IMAGE}:${IMAGE_VERSION} ${FRONTEND_IMAGE}:latest"
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}"
                }
            }
        }

        stage('Push Image to Docker Hub') {
            steps {
                sh "docker push ${BACKEND_IMAGE}:${IMAGE_VERSION}"
                sh "docker push ${BACKEND_IMAGE}:latest"
                sh "docker push ${FRONTEND_IMAGE}:${IMAGE_VERSION}"
                sh "docker push ${FRONTEND_IMAGE}:latest"
            }
        }

        stage('Deploy Containers') {
            steps {
                sh "docker stop backend-container || true && docker rm backend-container || true"
                sh "docker stop frontend-container || true && docker rm frontend-container || true"
                
                sh "docker run -d --name backend-container -p 5000:5000 ${BACKEND_IMAGE}:${IMAGE_VERSION}"
                sh "docker run -d --name frontend-container -p 80:80 ${FRONTEND_IMAGE}:${IMAGE_VERSION}"
            }
        }
    }
}
